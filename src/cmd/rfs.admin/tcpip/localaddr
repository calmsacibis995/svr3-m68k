#ident	"@(#)sadmin:admin/menu/packagemgmt/rfs/tcpip/localaddr	1.00"
#menu#	Display and optionally modify local system addresses
#help#
#help#	This subcommand reports and optionally allows for
#help#	changing the local system address. RFS and network listener
#help#	must not be running during this command.

#	definitions for file locations
ETC=/etc
TMP=/usr/tmp
ENP=/tcpip/enp
NSERVE=/usr/nserve

#	local definitions
true="TRUE"
false="FALSE"
primary=$false

# flags for checkyn to implement [q] (quit)
flags="-qq -k$$"

trap 'exit 0' 1 2 15

if [ ! -f $ENP/enp_param.S ]
then
	cd $ENP; cp default.S enp_param.S; cp default.desc enp_param.desc 
fi

(cd $ENP; /etc/enpload enp0 enp_param.S enpcode.S >/dev/null 2>&1)
uname=`uname -n`
eaddr=`netaddr | cut -f2 -d\ `
iaddr=`netaddr | cut -f1 -d\ `
domain=`netaddr | cut -f3 -d\ `
netid=`netaddr | cut -f4 -d\ `

while `checkyn ${flags} -f  -H '
	The Internet address is used by RFS to identify a host to the network.
	The address consists of 2 parts, network id and a unique serial number.
	The network id must be the same for all systems in an rfs domain or
	in domains wishing to communicate.
	This menu interface has the facility to build an internet address
	from the Ethernet address.  After selecting the address, the
	system data files will be built.' \
	"
	This machine is currently called \"${uname}\"
	The Ethernet address is \"${eaddr}\"
	The internet address is \"${iaddr}\"
	The Domain is \"${domain}\"
	The Network ID is \"${netid}\"

Do you want to change network id or internet address?" ` 
do
	# if listener active - blow off changes
	if nlsadmin -q tcpip >/dev/null 2>&1
	then
		echo "Network Listener is active - change aborted"
		exit 0
	fi

	if `checkyn -f -H '
	You may choose your own internet address or have the system build
	one from the Ethernet address.  Every system must have a unique
	internet address, while staying in the same network.' \
	"
	Would you like the system to build the internet address?"`
	then
		netid=`checkre ${flags} -fe "	To what network should \"${uname}\" belong ? [1-254,q]" \
		'.' 'There must be a netid.' \
		'^[0-9]\{1,\}$' 'Only numbers are permitted.' \
		'^.\{1,2\}$' 'No more than 2 numbers are permitted.'`

		iaddr=`netaddr -a -n $netid | cut -f1 -d\ `
		inet_hex=`netaddr -a -n $netid | cut -f5 -d\ `
		domain=`netaddr -a -n $netid | cut -f3 -d\ `
		netid=`netaddr -a -n $netid | cut -f4 -d\ `
	else
		iaddr=`checkre ${flags} -fe "	What is the internet address of system \"${uname}\"? [q]" \
			'.' 'Internet address is required for Remote File Sharing.' \
			'^[0-9\.]\{1,\}$' 'Only numbers and \".\" are permitted.' \
			'^.\{1,15\}$' 'No more than 15 characters are permitted.'`
		inet_hex=`netaddr -c ${iaddr} | cut -f5 -d\ `
		domain=`netaddr -c ${iaddr} | cut -f3 -d\ `
		netid=`netaddr -c ${iaddr} | cut -f4 -d\ `
		
	fi


#
#	first build the enp_param.desc file with current uname
	mv $ENP/enp_param.desc $TMP/desc
	sed '/host/ c\
host \"'${uname}'\"' < $TMP/desc >$ENP/enp_param.desc
	rm -f $TMP/desc

#	
#	next add internet address to /etc/hosts and build new
#	/tcpip/enp/enp_param.S with enpconfig
#
	if [ -f $ETC/hosts ]
	then
		sed "/${uname}/d" < $ETC/hosts >$TMP/hosts
		echo "${iaddr}	${uname}" | cat - $TMP/hosts > $ETC/hosts
		rm -f $TMP/hosts
	else
		echo "${iaddr}	${uname}" > $ETC/hosts
	fi
	(cd $ENP; enpconfig enp_param.desc > enp_param.S)

#
#	Build /.rhosts and /etc/hosts.equiv for cmc utilities
#
	if [ -f /.rhosts ]
	then
		sed "/${uname}/d" < /.rhosts >$TMP/.rhosts
		echo ${uname} | cat - $TMP/.rhosts > /.rhosts
		rm -f $TMP/.rhosts
	else
		echo ${uname} > /.rhosts
	fi

	if [ -f $ETC/hosts.equiv ]
	then
		sed "/${uname}/d" < $ETC/hosts.equiv > $TMP/hosts.equiv
		echo ${uname} | cat - $TMP/hosts.equiv > $ETC/hosts.equiv
		rm -f $TMP/hosts.equiv
	else
		echo ${uname} > $ETC/hosts.equiv
	fi

#
#	Setup network and domain
	dname -N tcpip
	if [ ${domain} = 'Default' ]
	then
		domain=`checkre ${flags} -fe "	What is the Domain name? [q]" \
		'.' 'There must be a domain.' \
		'^[0-9a-zA-Z_\-]\{1,\}$' 'Only letters, numbers, and \"_\" or \"-\" are permitted.' \
		'^.\{1,14\}$' 'No more than 14 characters are permitted.'`
		dname -D ${domain}
	fi

#
#	Build rfmaster file for this system ... if required
#	Ask if Primary, Secondary, or Other
	if `checkyn ${flags} -f  -H '
	Indicate if this machine is a primary domain nameserver.' \
	"	Is this the Primary domain nameserver for \"${domain}\"?" ` 
	then
		primary=$true
		if [ -f $NSERVE/rfmaster ]
		then
			sed "/\.${uname}/d" < $NSERVE/rfmaster > $TMP/rfmaster
			echo "${domain} P ${domain}.${uname}\n"\
			     "${domain}.${uname} A \\x022b${inet_hex}" \
			      | cat - $TMP/rfmaster > $NSERVE/rfmaster
			rm -f $TMP/rfmaster
		else
			echo "${domain} P ${domain}.${uname}\n"\
			     "${domain}.${uname} A \\x022b${inet_hex}" \
			     > $NSERVE/rfmaster
		fi
	fi

#	setup network listener
#
	if [ ! -d /usr/net/nls/tcpip ]
	then
		nlsadmin -i tcpip
		nlsadmin -a 105 -c /usr/net/servers/rfs/rfsetup -y "rfsetup" -p timod tcpip
	fi
	nlsadmin -l \\x022b${inet_hex} -t \\x02ff${inet_hex} tcpip
done

